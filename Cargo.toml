[package]
name = "gmtk_2024"
version = "0.1.0"
edition = "2021"

# Optimise this crate slightly
[profile.dev]
opt-level = 1

# Optimise dependencies heavily
[profile.dev.package."*"]
opt-level = 3

[dependencies]
# dynamic_linking improves compile times
# (https://bevyengine.org/learn/quick-start/getting-started/setup/#dynamic-linking)
# It shouldn't be used in distribution builds
# More optimisations here:
# https://bevyengine.org/learn/quick-start/getting-started/setup/#enable-fast-compiles-optional
bevy = { version = "0.14", default-features = false, features = [
    # From here: https://bevy-cheatbook.github.io/setup/bevy-config.html
    # Added webgpu feature for 0.13
    # Added bevy_state feature for 0.14

    # These are the default features:
    # (re-enable whichever you like)

    # Bevy functionality:
    "multi_threaded",     # Run with multithreading
    "bevy_asset",         # Assets management
    "bevy_audio",         # Builtin audio
    "bevy_gilrs",         # Gamepad input support
    "bevy_scene",         # Scenes management
    "bevy_state",         # State management
    "bevy_winit",         # Window management (cross-platform Winit backend)
    "bevy_render",        # Rendering framework core
    "bevy_core_pipeline", # Common rendering abstractions
    # "bevy_gizmos",        # Support drawing debug lines and shapes
    "bevy_sprite",        # 2D (sprites) rendering
    # "bevy_pbr",           # 3D (physically-based) rendering
    # "bevy_gltf",          # GLTF 3D assets format support
    # "bevy_text",          # Text/font rendering
    "bevy_ui",            # UI toolkit
    # "animation",          # Animation support
    "tonemapping_luts",   # Support different camera Tonemapping modes (enables KTX2+zstd)
    # "default_font",       # Embed a minimal default font for text/UI
    # "sysinfo_plugin",       # Use sysinfo in bevy_diagnostic

    # File formats:
    "png",    # PNG image format for simple 2D images
    # "hdr",    # HDR images
    # "ktx2",   # Preferred format for GPU textures
    # "zstd",   # ZSTD compression support in KTX2 files
    # "vorbis", # Audio: OGG Vorbis

    # Platform-specific:
    # "x11",                   # Linux: Support X11 windowing system
    # "android_shared_stdcxx", # Android: use shared C++ library
    "webgl2",                # Web: use WebGL2 instead of WebGPU
    # "webgpu"                 # Web: use WebGPU

    # These are other (non-default) features that may be of interest:
    # (add any of these that you need)

    # Bevy functionality:
    # "asset_processor",      # Asset processing
    # "filesystem_watcher",   # Asset hot-reloading
    # "subpixel_glyph_atlas", # Subpixel antialiasing for text/fonts
    # "serialize",            # Support for `serde` Serialize/Deserialize
    # "async-io",             # Make bevy use `async-io` instead of `futures-lite`
    # "pbr_transmission_textures", # Enable Transmission textures in PBR materials
                               # (may cause issues on old/lowend GPUs)

    # File formats:
    # "dds",  # Alternative DirectX format for GPU textures, instead of KTX2
    # "jpeg", # JPEG lossy format for 2D photos
    # "webp", # WebP image format
    # "bmp",  # Uncompressed BMP image format
    # "tga",  # Truevision Targa image format
    # "exr",  # OpenEXR advanced image format
    # "pnm",  # PNM (pam, pbm, pgm, ppm) image format
    # "basis-universal", # Basis Universal GPU texture compression format
    # "zlib", # zlib compression support in KTX2 files
    # "flac", # Audio: FLAC lossless format
    "mp3",  # Audio: MP3 format (not recommended)
    # "wav",  # Audio: Uncompressed WAV
    # "symphonia-all", # All Audio formats supported by the Symphonia library
    # "shader_format_glsl", # GLSL shader support
    # "shader_format_spirv", # SPIR-V shader support

    # Platform-specific:
    "wayland",              # (Linux) Support Wayland windowing system
    # "accesskit_unix",       # (Unix-like) AccessKit integration for UI Accessibility
    # "bevy_dynamic_plugin",  # (Desktop) support for loading of `DynamicPlugin`s

    # Development/Debug features:
    "dynamic_linking",   # Dynamic linking for faster compile-times
    # "trace",             # Enable tracing for performance measurement
    # "detailed_trace",    # Make traces more verbose
    # "trace_tracy",       # Tracing using `tracy`
    # "trace_tracy_memory", # + memory profiling
    # "trace_chrome",      # Tracing using the Chrome format
    # "wgpu_trace",        # WGPU/rendering tracing
    # "debug_glam_assert", # Assertions to validate math (glam) usage
    # "embedded_watcher",  # Hot-reloading for Bevy's internal/builtin assets
    # "system_steeping",   # Stepping through systems
] }
rand = "0.8"

